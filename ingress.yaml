#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: ingress-simples
#spec:
#  ingressClassName: nginx # kubectl get ingressClass # comando para ver o ingressClassName
#  rules:
#  - http:
#      paths:
#      - pathType: Prefix
#        path: /
#        backend:
#          service:
#            name: web-green
#            port: 
#              number: 80

#---

#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: ingress-path
#  annotations: 
#    nginx.ingress.kubernetes.io/rewrite-target: / #reescrever url caso app nao tenha o endpoint definido no path
#spec:
#  ingressClassName: nginx # kubectl get ingressClass # comando para ver o ingressClassName
#  rules:
#  - http:
#      paths:
#      - pathType: Prefix
#        path: /blue
#        backend:
#          service:
#            name: web-blue
#            port: 
#              number: 80
#      - pathType: Prefix
#        path: /green
#        backend:
#          service:
#            name: web-green
#            port: 
#              number: 80


# Link para a documentação para o pathType: Prefix ou Exact
# https://kubernetes.io/docs/concepts/services-networking/ingress/#examples


#---

#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: ingress-default
#spec:
#  ingressClassName: nginx
#  defaultBackend:
#    service:
#      name: nginx
#      port: 
#        number: 80

#---

  apiVersion: networking.k8s.io/v1
  kind: Ingress
  metadata:
    name: ingress-sonhomeu-front-angular
    annotations: 
      nginx.ingress.kubernetes.io/rewrite-target: / #reescrever url caso app nao tenha o endpoint definido no path
  spec:
    ingressClassName: nginx
    rules:
    - host: sonhomeuloja.com
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: nodejs-someu-front-angular
                port: 
                  number: 443
